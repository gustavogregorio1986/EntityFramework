// <auto-generated />
using EntityFramework.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework.Data.Migrations
{
    [DbContext(typeof(EntityFrameworkComtexto))]
    [Migration("20230516182149_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Candidato", b =>
                {
                    b.Property<int>("IdCandidato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailCandidato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeCndidato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telfone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCandidato");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("tb_Candidato");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Candidato")
                        .HasColumnType("int");

                    b.Property<string>("NomeEmopresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpresa");

                    b.HasIndex("Id_Candidato");

                    b.ToTable("tb_Empresa");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Candidato")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEndereco");

                    b.HasIndex("Id_Candidato");

                    b.ToTable("tb_Endereco");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Recrutador", b =>
                {
                    b.Property<int>("IdRecrutador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailRecrutador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeRecrutador")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRecrutador");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("tb_Recrutador");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Setor", b =>
                {
                    b.Property<int>("IdSetor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Empresa")
                        .HasColumnType("int");

                    b.Property<string>("NomeSetor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSetor");

                    b.HasIndex("Id_Empresa");

                    b.ToTable("tb_Setor");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("tb_Usuario");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Candidato", b =>
                {
                    b.HasOne("EntityFramework.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Empresa", b =>
                {
                    b.HasOne("EntityFramework.Dominio.Dominio.Candidato", "Candidato")
                        .WithMany()
                        .HasForeignKey("Id_Candidato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Endereco", b =>
                {
                    b.HasOne("EntityFramework.Dominio.Dominio.Candidato", "Candidato")
                        .WithMany()
                        .HasForeignKey("Id_Candidato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Recrutador", b =>
                {
                    b.HasOne("EntityFramework.Dominio.Dominio.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EntityFramework.Dominio.Dominio.Setor", b =>
                {
                    b.HasOne("EntityFramework.Dominio.Dominio.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Id_Empresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });
#pragma warning restore 612, 618
        }
    }
}
